name: iotpilot

services:
  iotpilot:
    build:
      context: ..
      dockerfile: docker/node/Dockerfile
    container_name: iotpilot-app
    ports:
      - "4000"  # Para acceso directo al servidor Node.js
    volumes:
      - ../app:/app  # This maps your local app directory to the container
      - iotpilot_data:/app/data  # Persistent volume for database
      - /app/node_modules  # Anonymous volume for node_modules
    environment:
      - NODE_ENV=production
      - CHOKIDAR_USEPOLLING=true
      - HOST_NAME=${HOST_NAME:-iotpilot.test}  # Make hostname available to the app
    restart: unless-stopped
    command: bash -c "npm install && npm run dev"
    networks:
      - iotpilot_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.iotpilot-http.rule=Host(`${HOST_NAME:-iotpilot.test}`)"
      - "traefik.http.routers.iotpilot-http.entrypoints=web"
      - "traefik.http.routers.iotpilot-https.rule=Host(`${HOST_NAME:-iotpilot.test}`)"
      - "traefik.http.routers.iotpilot-https.entrypoints=websecure"
      - "traefik.http.routers.iotpilot-https.tls=true"
      # Tailscale domain router (only created if TAILSCALE_DOMAIN is set)
      - "traefik.http.routers.iotpilot-tailscale.rule=Host(`${TAILSCALE_DOMAIN:-no-tailscale-domain}`)"
      - "traefik.http.routers.iotpilot-tailscale.entrypoints=websecure"
      - "traefik.http.routers.iotpilot-tailscale.tls=true"
      # Common configuration
      - "traefik.http.services.iotpilot.loadbalancer.server.port=4000"

  traefik:
    image: traefik:v2.10
    container_name: iotpilot-traefik
    ports:
      - "4080:80"      # Map HTTP port explicitly to 4080
      - "8080:8080"    # Traefik Dashboard
      - "4443:443"     # Map HTTPS port explicitly to 4443
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/config:/etc/traefik/config:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro  # To monitor containers
      - traefik_certs:/etc/traefik/acme  # For storing certificates
    networks:
      - iotpilot_network
    restart: unless-stopped
    depends_on:
      - iotpilot
    environment:
      - ACME_EMAIL=${ACME_EMAIL:-contact@iotpilot.tk}

  tailscale:
    image: tailscale/tailscale:latest
    container_name: iotpilot-tailscale
    volumes:
      - tailscale_state:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    # Esto comparte la red con el contenedor de Traefik para acceder a sus servicios
    network_mode: "service:traefik"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      - TS_AUTHKEY=${TAILSCALE_AUTH_KEY}
      - TS_EXTRA_ARGS=--advertise-tags=tag:container
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      # Parámetros básicos sin anunciar rutas ni exit nodes
      - TS_EXTRA_ARGS=--hostname=${HOST_NAME:-iotpilot.test} --reset
    restart: unless-stopped

volumes:
  iotpilot_data:
    driver: local
  tailscale_state:
    driver: local
  traefik_certs:
    driver: local

networks:
  iotpilot_network:
    driver: bridge